#summary Unusual screen-loading routines.

= Introduction =

The 47loader-tzx tool can produce screens that load in unusual ways.  Such screens can be loaded by 47loader using an optional module, "dynamic". This module reads a table of block addresses, lengths and directions, then uses "resume" to load them in sequence.

= Creating a tape file =

You can use 47loader-tzx's `-fancyscreen` option to specify a fancy screen load.  The option takes as an argument one of the following:

|| *`-fancyscreen` argument* || *Effect* || *Loader direction after the load is complete* ||
|| `bidi_acp` || Attributes that start at the top and bottom and converge in the centre, then a bidirectional pixmap load. || Backwards ||
|| `bidi_ap` || Bidirectional screen load, attributes first. || Backwards ||
|| `bidi_pa` || Bidirectional screen load, pixmap first. || Backwards ||
|| `bidi_pac` || Bidirectional pixmap load followed by attributes that start at the top and bottom and converge in the centre. || Backwards ||
|| `btt_fa` || Loads the pixmap bottom-to-top instead of in thirds, then the attributes forwards. || Forwards ||
|| `btt_ra` || Loads the pixmap bottom-to-top instead of in thirds, then the attributes backwards. || Backwards ||
|| `fa_btt` || Loads the attributes forwards, then the pixmap bottom-to-top instead of in thirds. || Backwards ||
|| `fa_rp` || Loads the attributes forwards, then the pixmap backwards. || Backwards ||
|| `fa_ttb` || Loads the attributes forwards, then the pixmap top-to-bottom instead of in thirds. || Forwards ||
|| `fp_ra` || Loads the pixmap forwards, then the attributes backwards. || Backwards ||
|| `ra_btt` || Loads the attributes backwards, then the pixmap bottom-to-top instead of in thirds. || Backwards ||
|| `ra_fp` || Loads the attributes backwards, then the pixmap forwards. || Forwards ||
|| `ra_ttb` || Loads the attributes backwards, then the pixmap top-to-bottom instead of in thirds. || Forwards ||
|| `rp_fa` || Loads the pixmap backwards, then the attributes forwards. || Forwards ||
|| `ttb_fa` || Loads the pixmap top-to-bottom instead of in thirds, then the attributes forwards. || Forwards ||
|| `ttb_ra` || Loads the pixmap top-to-bottom instead of in thirds, then the attributes backwards. || Backwards ||

For example, this sequence of commands creates a tape file containing:
  * a screen that loads the pixmap forwards but the attributes backwards;
  * a block containing a game, immediately afterwards with no gap, for loading using "[Resume resume]":

{{{
47loader-tzx -fancyscreen fp_ra -pause 0 -output mygame.tzx mygame.scr
47loader-tzx -pilot resume -output mygame.tzx mygame.bin
}}}

When you use `-fancyscreen`, 47loader-tzx reports the length of the table containing the addresses, lengths and directions of each block comprising the screen.

= Writing the loader =

Fancy screens are loaded using a module called "dynamic" that exports an entry point, `loader_dynamic`.

As described above, `-fancyscreen` instructs 47loader-tzx to output a block containing a table describing the blocks that comprise the screen.  You must define the symbol LOADER_DYNAMIC_TABLE_ADDR; its value is the memory address at which the table will be loaded.  There must be enough free memory at this address to store the number of bytes reported by 47loader-tzx.

Because fancy screens generally involve one or more changes of load direction, it is possible that the loader will be left pointing backwards after the screen has loaded.  The table above indicates which fancy effects this applies to.  Following a fancy screen load, you probably want to load the game forwards, so you must include a call to `loader_change_direction` before loading the game.

Here is an example of a loader that will be embedded in a BASIC REM statement.  It uses the "dynamic" module to load the fancy screen, then loads the game using "resume".

TODO