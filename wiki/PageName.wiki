#summary The border themes provided.

= Introduction =

By defining a label at assemble time, you can choose the border effect that the loader will use.  The effects, referred to as "themes", are encapsulated in chunks of code separate from the main logic.  New ones can easily be written.

The label to define to specify a theme is `LOADER_THEME_*`, where `*` is one of the theme names detailed below, e.g. `LOADER_THEME_RAINBOW`.

= Available themes =

|| *Name* || *Searching border* || *Pilot border (fast timings)* || *Pilot border (ROM timings)* || *Data border* || *Notes* ||
|| LDBYTES || Red/cyan || Red/cyan || Red/cyan || Blue/yellow || Colours used by the ROM loader. ||
|| FIRE_RIPPLE || Black/red || Black/yellow || Black/white || Black/red/yellow || Alternates between red and yellow once per byte, giving a rippling effect. ||
|| ORIGINAL || Black/blue || Black/blue || Black/blue || Black/red || Colours used by 47loader early in its development.  Resembles the loader used by some Imagine/Ocean multiload games. ||
|| RAINBOW || Black/red || Black/green || Black/white || Black/colour, derived from the bits currently being loaded || The "standard" 47loader theme. ||
|| RAINBOW_RIPPLE || Black/red || Black/green || Black/white || Black/colour, derived from number of bytes remaining to be loaded. || The once-per-byte colour change gives a rippling effect. ||
|| SPEEDLOCK || Black/red || Black/red || Black/red || Black/blue || Resembles the colour scheme used by many iterations of the famous Speedlock loader. ||
